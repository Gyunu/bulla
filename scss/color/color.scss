//These are important so that they will always override
//This is so when we read the html and see this class, it will always be applied.
//No guess work or cascade issues.
@each $name, $color in $colors {
  .has-#{$name}-bg {
    background-color: $color !important;
    color: findColorInvert($color) !important;
  }

  .is-#{$name}-text {
    color: $color!important;
  }

  @each $position, $position-name in $positions {
    @if(type-of($position-name) == 'string') {
      $b1: positions('border', $position);
      .has-#{$name}-#{$position-name}-border {
        #{$b1}: 1px solid #{$color} !important;
      }
    }
    @if(type-of($position-name) == 'map') {
      @if($position == 'every') {
        .has-#{$name}-#{$position}-border {
          border: 1px solid #{$color} !important;
        }
      }
      @else {
        $b1: positions('border', map-get($position-name, '1'));
        $b2: positions('border', map-get($position-name, '2'));
        .has-#{$name}-#{$position}-border {
          #{$b1}: 1px solid #{$color} !important;
          #{$b2}: 1px solid #{$color} !important;
        }
      }
    }
  }

}
