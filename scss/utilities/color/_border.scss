@each $name, $color in $colors {
  @each $position, $position-name in $positions {
    @each $size, $size-name in $sizes {
      @if($size == 'tiny') {
        @if(type-of($position-name) == 'map') {
          @if($position == 'every') {
            .has-#{$size}-#{$position}-border {
              border: 1px solid #{$color} !important;
            }
          }
          @else {
            $b1: positions('border', map-get($position-name, '1'));
            $b2: positions('border', map-get($position-name, '2'));
            .has-#{$size}-#{$name}-#{$position}-border {
              #{$b1}: 1px solid #{$color} !important;
              #{$b2}: 1px solid #{$color} !important;
            }
          }
        }
      }
      @else {
        @if($size != 'no') {
          @if(type-of($position-name) == 'string') {
            $b1: positions('border', $position);
            .has-#{$size}-#{$name}-#{$position-name}-border {
              #{$b1}: #{$size-name / 4} solid #{$color} !important;
            }
          }
          @if(type-of($position-name) == 'map') {
            @if($position == 'every') {
              .has-#{$size}-#{$position}-border {
                border: #{$size-name / 4} solid #{$color} !important;
              }
            }
            @else {
              $b1: positions('border', map-get($position-name, '1'));
              $b2: positions('border', map-get($position-name, '2'));
              .has-#{$size}-#{$name}-#{$position}-border {
                #{$b1}: #{$size-name / 4} solid #{$color} !important;
                #{$b2}: #{$size-name / 4} solid #{$color} !important;
              }
            }
          }
        }
      }
    }
  }
}
